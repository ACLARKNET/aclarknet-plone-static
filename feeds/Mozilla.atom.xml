<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alex Clark</title><link href="http://blog.aclark.net/" rel="alternate"></link><link href="http://blog.aclark.net/feeds/Mozilla.atom.xml" rel="self"></link><id>http://blog.aclark.net/</id><updated>2012-09-21T21:45:00Z</updated><entry><title>Gittip is the future</title><link href="http://blog.aclark.net/gittip-is-the-future.html" rel="alternate"></link><updated>2012-09-21T21:45:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2012-09-21:gittip-is-the-future.html</id><summary type="html">&lt;p&gt;Heard of Gittip? If not, you should know: it has a lot of people (including me) excited about the potential to make a living doing what they love. From the Gittip blog &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Gittip is a system for funding people who build free culture. The core is small weekly gifts. The idea is that if 1,000 people give $1 a week to a great programmer, musician, scientist, teacher, etc., then that frees them up to pursue their vision even further for making the world better.&lt;/blockquote&gt;
&lt;p&gt;I love this idea! In particular, because it speaks to me more than other similar offerings:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Chipin&lt;/li&gt;
&lt;li&gt;Flattr&lt;/li&gt;
&lt;li&gt;Kickstarter&lt;/li&gt;
&lt;li&gt;Paypal&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Why? If for no other reason, because it comes from a member of the Python community: Chad Whitacre of &lt;a class="reference external" href="http://aspen.io"&gt;http://aspen.io&lt;/a&gt; fame. And the Python community has become near and dear to me, second only to my-one-true-open-source-love: Plone. So I want to see open source developers, particularly Python developers, succeed.&lt;/p&gt;
&lt;img alt="http://blog.aclark.net/images/gittip.png" src="http://blog.aclark.net/images/gittip.png" /&gt;
&lt;p&gt;And succeed they will, with gittip. Some particularly impressive results so far:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Chad Whitacre, the founder, is making almost $160 per week: &lt;a class="reference external" href="https://www.gittip.com/whit537/"&gt;https://www.gittip.com/whit537/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;David Glick, a newly independent Plone developer, is making over $100 per week: &lt;a class="reference external" href="https://www.gittip.com/davisagli/"&gt;https://www.gittip.com/davisagli/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read The Docs, everyone's favorite documentation hosting site, is making almost $100 per week: &lt;a class="reference external" href="https://www.gittip.com/readthedocs/"&gt;https://www.gittip.com/readthedocs/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whilst no one is making a living off of gittip yet, with enough support and momentum it's only a matter of time before they do. Toward that end, I have written a blog entry for the &lt;a class="reference external" href="http://blog.gittip.com"&gt;gittip blog&lt;/a&gt; describing among other things: how I'd like to make a living with gittip. Here is an excerpt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Chad’s vision for Gittip really speaks to me. All over the world there are thousands of open source developers writing code, managing projects, and moving the world of open source technology forward. This helps millions of individuals, companies and the entire world with a variety of its endeavours.&lt;/p&gt;
&lt;p&gt;What if those folks could easily show their appreciation to individuals known to make open source happen? What if these volunteer developers didn’t need to go get “day jobs” to make a living because the world has taken care of them? What if companies didn’t need to hire employees in the traditional sense because their needs have already been met by open source?&lt;/p&gt;
&lt;p&gt;There is a lot to think about and strive for here, and I’m really excited to help Chad with his mission. On a daily basis I’m involved with, and influential to the following open source projects: Plone (Python-based CMS), Pillow (Python Imaging Library fork), Buildout (Python-based build system), and more. I hope Gittip can help me help you, the open source community and the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can read the rest of the article here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.gittip.com/post/31960853095/back-the-stack-pythonpackages-com"&gt;http://blog.gittip.com/post/31960853095/back-the-stack-pythonpackages-com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And if you'd like to help me, I'm attempting to cover the hosting costs for my startup business: &lt;a class="reference external" href="http://pythonpackages.com"&gt;pythonpackages.com&lt;/a&gt;, so I can keep developing it for another year. I truly believe in my vision of a &amp;quot;hosted packaging service&amp;quot;, and I really want to help the Python community fix its packaging story in any way that I can. If in no other way, than by making it so you don't have to think about Python packaging at all (i.e. I'll worry about the various complexities, so you don't have to). You can find me on gittip here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.gittip.com/aclark4life/"&gt;https://www.gittip.com/aclark4life/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, go be generous and help build the commons!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://blog.gittip.com/post/30116848405/with-payouts-gittip-is-minimally-viable"&gt;http://blog.gittip.com/post/30116848405/with-payouts-gittip-is-minimally-viable&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>Yes, this blog is now powered by Pelican</title><link href="http://blog.aclark.net/yes-this-blog-is-now-powered-by-pelican.html" rel="alternate"></link><updated>2012-09-21T15:30:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2012-09-21:yes-this-blog-is-now-powered-by-pelican.html</id><summary type="html">&lt;p&gt;As an open source &amp;quot;Plone guy&amp;quot;, I'm always prepared to defend and explain my choice to &lt;strong&gt;not&lt;/strong&gt; use Plone for blogging. A couple years ago, I started using Wordpress in order to learn its feature set. I enjoyed my time with it, but after moving to wordpress.com for &amp;quot;trouble free&amp;quot; hosting, I found I couldn't control my category feeds the way I wanted; the honeymoon was over.&lt;/p&gt;
&lt;p&gt;This was a giant let down, because I was hoping to avoid putting any time in to my blogging infrastructure. For weeks I did nothing. I poked at various options: Pelican, Plone, Tumblr, others. Eventually, I found my way back to Pelican and now I'm happy again.&lt;/p&gt;
&lt;img alt="http://blog.aclark.net/images/pelican.png" src="http://blog.aclark.net/images/pelican.png" /&gt;
&lt;p&gt;Pelican is a static blog generator, as you may have heard. So &lt;strong&gt;one big advantage&lt;/strong&gt; is:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You can host it for free, or close to free on any number of free or cheap static website hosting services! (I'm using GitHub Pages)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="other-advantages"&gt;
&lt;h2&gt;Other advantages&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It does feeds right (I need 3 &amp;quot;full body&amp;quot; feeds for: Mozilla, Plone, Python) &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It's fun to configure (edit pelicanconf.py or publishconf.py).&lt;/li&gt;
&lt;li&gt;The &amp;quot;cool kids&amp;quot; use it: e.g. Tarek Ziadé, Kenneth Reitz, Daniel Greenfeld, many others.&lt;/li&gt;
&lt;li&gt;It grows with you: this is huge. You can start using it and feel comfortable right away, but there is always more to learn. This is how all software should be. Unfortunately, it's tough to get it right (I think this is formally called UX).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="some-disadvantages"&gt;
&lt;h2&gt;Some disadvantages&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Don't like typing in the terminal? Pelican is not for you.&lt;/li&gt;
&lt;li&gt;No &amp;quot;nested&amp;quot; entries e.g. 2012/09/21/entry.html. I don't know if there is a formal name for this feature, but I miss it (if for no other reason than &amp;quot;cool URLS never change&amp;quot; i.e. I've broken links with this move.)&lt;/li&gt;
&lt;li&gt;The pelican-import has some bugs, so I'm doing a lot of manual cleanup (I don't mind this though.)&lt;/li&gt;
&lt;li&gt;Tags are categories and categories are tags (or something). I had to convert all my categories to tags, and then turn on tag feeds and turn off category feeds. Category feeds are on by default and tag feeds are off by default. Also ATOM is on and RSS is off, if that is of interest to you. (Since this is really just configuration change and not a disadvantage per sé, it probably belongs more in the next section where I discuss my setup.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are curious about my setup, here are the details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setup"&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Getting started with Pelican was easy, basically:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ virtualenv .
$ bin/pip install pelican BeautifulSoup Markdown
$ bin/pelican-quickstart
&lt;/pre&gt;
&lt;p&gt;At this point, after I answer the quickstart questions I:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ source bin/activate
$ make html
&lt;/pre&gt;
&lt;p&gt;Now the content is ready to host (which for me just involves a git push).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tweaks"&gt;
&lt;h2&gt;Tweaks&lt;/h2&gt;
&lt;p&gt;A few things were tricky.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I wanted to host my articles at the top level of the repo for serving on GitHub Pages, so I modified the Makefile to make it so &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Categories control what links are available in the header, so I disabled them all but one called &amp;quot;Blog&amp;quot;. Not ideal, but it works.&lt;/li&gt;
&lt;li&gt;The &amp;quot;social&amp;quot; links, and my disqus and analytics API keys were all a pleasure to configure.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="workflow"&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;Now I write articles in restructured text in the &lt;cite&gt;content/&lt;/cite&gt; directory and publish them like so:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ make publish; git commit -a -m &amp;quot;Publish&amp;quot;; git push
&lt;/pre&gt;
&lt;p&gt;All the details are here if you'd like to take a look:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ACLARKNET/aclarknet.github.com/commits/master"&gt;https://github.com/ACLARKNET/aclarknet.github.com/commits/master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comments from more knowledgable Pelican users welcome. Like this article? Tip me on Gittip!&lt;/p&gt;
&lt;iframe style="border: 0; margin: 0; padding: 0;"
    src="https://www.gittip.com/aclark4life/widget.html"
    width="48pt" height="20pt"&gt;&lt;/iframe&gt;&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;This is actually my first &amp;quot;test&amp;quot; post with Pelican so I will get a chance to see how the feeds perform. But they looked good in testing.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I think I broke &amp;quot;make html&amp;quot;, actually. Primarily I just needed to make it not &amp;quot;clean&amp;quot; the entire repo.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>Building Windows Installers In The Cloud</title><link href="http://blog.aclark.net/building-windows-installers-in-the-cloud.html" rel="alternate"></link><updated>2012-08-01T22:19:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2012-08-01:building-windows-installers-in-the-cloud.html</id><summary type="html">&lt;p&gt;With pythonpackages.com, I want to solve real problems for people today.
So here's a proof of concept for building Windows installers quickly and
easily &amp;quot;in the cloud&amp;quot; (i.e. without a Windows machine local). This
article is mostly about the back end, as the front end is &lt;a class="reference external" href="http://docs.pythonpackages.com/en/latest/introduction.html"&gt;already
documented&lt;/a&gt;. &lt;em&gt;TL;DR: We're moving from proof-of-concept phase to
useful-service phase. If you find the demo interesting and want to help
build something great, please consider purchasing one of `our current
plans`_.&lt;/em&gt;&lt;/p&gt;
&lt;div class="section" id="step-1-to-the-clouds"&gt;
&lt;h2&gt;Step 1: To The Clouds&lt;/h2&gt;
&lt;p&gt;For the purpose of the demo, I booted up a Windows server on Rackspace
Cloud and started installing things. &lt;a href="#id1"&gt;&lt;span class="problematic" id="id2"&gt;`|image0|`_&lt;/span&gt;&lt;/a&gt; On the short list of
things to install was:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2.7 from python.org.&lt;/li&gt;
&lt;li&gt;GitHub for Windows from github.com (mainly for git.)&lt;/li&gt;
&lt;li&gt;pythonpackages.com from bitbucket.org (free private repos!)&lt;/li&gt;
&lt;li&gt;Microsoft compiler (free version, make sure to use the same one used
to compile Python.)&lt;/li&gt;
&lt;li&gt;Redis for Windows (Hell froze over, you can find this in Microsoft's
GitHub account: &lt;a class="reference external" href="https://github.com/MSOpenTech/Redis"&gt;https://github.com/MSOpenTech/Redis&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Vim.exe (which I copy to vi.exe because I hate typing vim.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once I had all these things in place, I was able to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install pythonpackages.com (pip install -r requirements.txt.)&lt;/li&gt;
&lt;li&gt;Compile and run Redis (Several projects bundled together in Visual
Studio is apparently called a &amp;quot;solution&amp;quot;, how quaint!)&lt;/li&gt;
&lt;li&gt;Start the site.&lt;/li&gt;
&lt;li&gt;Start testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#id3"&gt;&lt;span class="problematic" id="id4"&gt;`|image1|`_&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-fix-all-the-bugs"&gt;
&lt;h2&gt;Step 2: Fix all the bugs&lt;/h2&gt;
&lt;p&gt;This step involved a lot of cursing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Backslashes.&lt;/li&gt;
&lt;li&gt;Lack of vi key bindings.&lt;/li&gt;
&lt;li&gt;Other Windows-isms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But I also praised my &lt;a class="reference external" href="http://cord.sourceforge.net/"&gt;CoRD Remote Desktop Client&lt;/a&gt; because it worked
awesome. Anyway, the bugs/issues I fixed (and didn't fix) were roughly:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create new application on GitHub and configured keys accordingly.&lt;/li&gt;
&lt;li&gt;Switch Stripe keys to testing.&lt;/li&gt;
&lt;li&gt;Fix Python paths and other trivial changes, so the application can
run `python setup.py bdist_wininst`.&lt;/li&gt;
&lt;li&gt;JavaScript is completely broken for some reason I've yet to determine
(haven't looked yet, but guessing Windows path related).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-profit"&gt;
&lt;h2&gt;Step 3: Profit!&lt;/h2&gt;
&lt;p&gt;I have to admit: I was giddy when it started working, and I was able to
create a Windows Installer for Pillow (Python Imaging Library fork).
[caption id=&amp;quot;attachment_5143&amp;quot; align=&amp;quot;aligncenter&amp;quot;
width=&amp;quot;300&amp;quot;]&lt;a href="#id5"&gt;&lt;span class="problematic" id="id6"&gt;`|image2|`_&lt;/span&gt;&lt;/a&gt; (We know there are security implications here.
We are currently addressing them as best as we can.)[/caption]
&lt;a href="#id7"&gt;&lt;span class="problematic" id="id8"&gt;`|image3|`_&lt;/span&gt;&lt;/a&gt; I was even happier when I ran the installer and it worked.
&lt;a href="#id9"&gt;&lt;span class="problematic" id="id10"&gt;`|image4|`_&lt;/span&gt;&lt;/a&gt; &lt;a href="#id11"&gt;&lt;span class="problematic" id="id12"&gt;`|image5|`_&lt;/span&gt;&lt;/a&gt; That's it. Next I hope to &lt;a class="reference external" href="http://pythonpackages.com/plans"&gt;get some customers&lt;/a&gt;
so I can keep the Windows box running, and make it available to the
public.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="big-picture"&gt;
&lt;h2&gt;Big Picture&lt;/h2&gt;
&lt;p&gt;In case you are interested, the &lt;a class="reference external" href="http://docs.pythonpackages.com/en/latest/roadmap.html"&gt;roadmap for beta Q3 is here&lt;/a&gt;. I will
also mention that I recently used &lt;a class="reference external" href="http://dia-installer.de/"&gt;Dia&lt;/a&gt; (&amp;lt;3) to create this
info-graphic, in hopes of better communicating what I'm trying to build.
Check it out! &lt;a href="#id13"&gt;&lt;span class="problematic" id="id14"&gt;`|image6|`_&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;&lt;/div&gt;
&lt;div class="system-messages section"&gt;
&lt;h2&gt;Docutils System Messages&lt;/h2&gt;
&lt;div class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 18); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image0|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id3"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 39); &lt;em&gt;&lt;a href="#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image1|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id5"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 63); &lt;em&gt;&lt;a href="#id6"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image2|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id7"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 63); &lt;em&gt;&lt;a href="#id8"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image3|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id9"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 63); &lt;em&gt;&lt;a href="#id10"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image4|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id11"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 63); &lt;em&gt;&lt;a href="#id12"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image5|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id13"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/building-windows-installers-in-the-cloud.rst&lt;/tt&gt;, line 76); &lt;em&gt;&lt;a href="#id14"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image6|&amp;quot;.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>pythonpackages.com beta launch</title><link href="http://blog.aclark.net/pythonpackagescom-beta-launch.html" rel="alternate"></link><updated>2012-07-04T05:19:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2012-07-04:pythonpackagescom-beta-launch.html</id><summary type="html">&lt;p&gt;After 9 months of development, pythonpackages.com has
grand-ceremoniously flipped the switch from alpha to beta. Here is an
overview of the beta release features.&lt;/p&gt;
&lt;div class="section" id="killer-github-integration"&gt;
&lt;h2&gt;&lt;strong&gt;Killer GitHub integration&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The workflow you may now enjoy is:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Login with your GitHub account&lt;/li&gt;
&lt;li&gt;Select a repository that contains a Python package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_5000&amp;quot; align=&amp;quot;alignnone&amp;quot;
width=&amp;quot;300&amp;quot;]&lt;a href="#id1"&gt;&lt;span class="problematic" id="id2"&gt;`|image0|`_&lt;/span&gt;&lt;/a&gt; Ohhh, look, my repos[/caption] [caption id=&amp;quot;&amp;quot;
align=&amp;quot;alignnone&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href="#id3"&gt;&lt;span class="problematic" id="id4"&gt;`|image1|`_&lt;/span&gt;&lt;/a&gt; Ahhh, look at my
selection[/caption]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="one-click-release"&gt;
&lt;h2&gt;One-click release&lt;/h2&gt;
&lt;p&gt;More sweet workflow:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Click a button to release to a test index, PyPI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_5015&amp;quot; align=&amp;quot;alignnone&amp;quot;
width=&amp;quot;300&amp;quot;]&lt;a href="#id5"&gt;&lt;span class="problematic" id="id6"&gt;`|image2|`_&lt;/span&gt;&lt;/a&gt; Oh snap, I just did a release[/caption]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-packages-through-the-web-with-pastescript"&gt;
&lt;h2&gt;Create packages through-the-web (with PasteScript)&lt;/h2&gt;
&lt;p&gt;There's a lot of room for growth, but this feature is exciting even in
its simplest form. [caption id=&amp;quot;attachment_5006&amp;quot; align=&amp;quot;alignnone&amp;quot;
width=&amp;quot;300&amp;quot;]&lt;a href="#id7"&gt;&lt;span class="problematic" id="id8"&gt;`|image3|`_&lt;/span&gt;&lt;/a&gt; Really? I just type it in?[/caption] [caption
id=&amp;quot;attachment_5008&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href="#id9"&gt;&lt;span class="problematic" id="id10"&gt;`|image4|`_&lt;/span&gt;&lt;/a&gt; OMFG I
can't believe this is a thing[/caption] [caption id=&amp;quot;attachment_5009&amp;quot;
align=&amp;quot;alignnone&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href="#id11"&gt;&lt;span class="problematic" id="id12"&gt;`|image5|`_&lt;/span&gt;&lt;/a&gt; Win-ning[/caption]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dashboard-o-releases"&gt;
&lt;h2&gt;Dashboard o releases&lt;/h2&gt;
&lt;p&gt;pythonpackages.com keeps track of your releases, using the same
technology that powers the alpha release &amp;quot;package featuring&amp;quot; feature.
&lt;a href="#id13"&gt;&lt;span class="problematic" id="id14"&gt;`|image6|`_&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="github-organization-support"&gt;
&lt;h2&gt;GitHub Organization support&lt;/h2&gt;
&lt;p&gt;But wait, there's more. Paid plans (which have not been deployed yet)
get access to GitHub organizations, whose repositories can then be
&amp;quot;slotted&amp;quot; like normal. &lt;a href="#id15"&gt;&lt;span class="problematic" id="id16"&gt;`|image7|`_&lt;/span&gt;&lt;/a&gt; &lt;a href="#id17"&gt;&lt;span class="problematic" id="id18"&gt;`|image8|`_&lt;/span&gt;&lt;/a&gt; &lt;a href="#id19"&gt;&lt;span class="problematic" id="id20"&gt;`|image9|`_&lt;/span&gt;&lt;/a&gt; &lt;a href="#id21"&gt;&lt;span class="problematic" id="id22"&gt;`|image10|`_&lt;/span&gt;&lt;/a&gt;
&lt;a href="#id23"&gt;&lt;span class="problematic" id="id24"&gt;`|image11|`_&lt;/span&gt;&lt;/a&gt; If you'd like to get started using the site, check out the
&lt;a class="reference external" href="http://docs.pythonpackages.com/en/latest/crashcourse.html"&gt;crash course&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;&lt;/div&gt;
&lt;div class="system-messages section"&gt;
&lt;h2&gt;Docutils System Messages&lt;/h2&gt;
&lt;div class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 18); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image0|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id3"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 18); &lt;em&gt;&lt;a href="#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image1|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id5"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 30); &lt;em&gt;&lt;a href="#id6"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image2|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id7"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 36); &lt;em&gt;&lt;a href="#id8"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image3|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id9"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 36); &lt;em&gt;&lt;a href="#id10"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image4|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id11"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 36); &lt;em&gt;&lt;a href="#id12"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image5|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id13"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 46); &lt;em&gt;&lt;a href="#id14"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image6|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id15"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 53); &lt;em&gt;&lt;a href="#id16"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image7|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id17"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 53); &lt;em&gt;&lt;a href="#id18"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image8|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id19"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 53); &lt;em&gt;&lt;a href="#id20"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image9|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id21"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 53); &lt;em&gt;&lt;a href="#id22"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image10|&amp;quot;.&lt;/div&gt;
&lt;div class="system-message" id="id23"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/pythonpackages-com-beta-launch.rst&lt;/tt&gt;, line 53); &lt;em&gt;&lt;a href="#id24"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image11|&amp;quot;.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>Adam Yauch has passed</title><link href="http://blog.aclark.net/adam-yauch-has-passed.html" rel="alternate"></link><updated>2012-05-11T09:58:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2012-05-11:adam-yauch-has-passed.html</id><summary type="html">&lt;p&gt;&lt;em&gt;And why it matters to tech people, like me&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;(I hope my tech colleagues will indulge my thoughts on the recent
passing of Beastie Boy Adam Yauch.)&lt;/p&gt;
&lt;p&gt;TL;DR: I &amp;lt;3 the Beastie Boys and will miss Adam Yauch; and I suspect
many others in the tech world do, and will, too&lt;/p&gt;
&lt;div class="section" id="where-i-came-from"&gt;
&lt;h2&gt;Where I came from&lt;/h2&gt;
&lt;p&gt;For as long as I can remember, I've been trying to emulate my heroes. It
started with pop music in the 80s and artists like Michael Jackson,
Madonna, and of course the Beastie Boys. While I was obsessed with
Michael Jackson back then, I don't recall trying too hard to emulate the
Beastie Boys… until the 90s.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;In the early 90s, I was just out of high school (where I discovered Led
Zeppelin, Pink Floyd, Beatles, Stones etc), was working full time at
Chili's, and had no serious plans for college. I was really into music,
but didn't have the social skills required to participate in any
meaningful activities, like playing in a band.&lt;/p&gt;
&lt;p&gt;But I loved music.&lt;/p&gt;
&lt;p&gt;I listened to Nirvana, Beastie Boys, and any number of other pop, rock
and rap acts of the 90s. I went to rock shows at the 8x10 in Baltimore
and 9:30 club in DC. I went to festivals like the HFSistival and
Lollapalooza. Throughout the decade, I formulated my thoughts on how I
would, one day, start a band.&lt;/p&gt;
&lt;p&gt;To say the Beastie Boys were inspirational to me during this time period
would be a colossal understatement (remember the first time you saw the
&amp;quot;So Watcha Want?&amp;quot; video?) While I wholly identified with the
angst-ridden music of Nirvana, I also equally identified with the good
natured spirit of, and dope-ass-jams from, the Beastie Boys: three guys
producing kick ass music with, among other instruments, a &amp;quot;bullshit mic,
made out of plastic&amp;quot;. Most importantly: they never took themselves too
seriously. They made great music, but they were also just like you and
me. They made you feel like you could do it, too.&lt;/p&gt;
&lt;p&gt;In the late 90s and early to mid 2000s, I finally got a chance to play
music. I started a band, played some shows, recorded a few albums, and
had a lot of fun. Most importantly: I proved to myself I could do it.
The shows I put on with my band were awesome; they were true rock shows:
those in which the audience responded positively, viscerally. There is
no better feeling in the world than that type of self-expression.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="image0-who-i-am-now"&gt;
&lt;h2&gt;&lt;a href="#id1"&gt;&lt;span class="problematic" id="id2"&gt;`|image0|`_&lt;/span&gt;&lt;/a&gt;Who I am now&lt;/h2&gt;
&lt;p&gt;Eventually the band imploded, and I found a new obsession: technology. I
have always been obsessed with tech, but never focused on it exclusively
until the mid to late 2000s. Now I have a new set of heroes to emulate,
and many new things to prove to myself I can do. Maybe I'll even play
music again one day, but if I don't, I know that I accomplished, on some
level, what I set out to do. And that is a great feeling.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="where-we-are-all-headed"&gt;
&lt;h2&gt;Where we are all headed&lt;/h2&gt;
&lt;p&gt;We are all headed forward, now, without Adam Yauch to inspire us anew.
This sucks more than words can express; but it is, alas, a part of life.
Without death to make life precious, there would be no joy in living. We
all only have a short period of time in life to accomplish our goals, so
it is important that we spend time trying to do so. (And if your goals
include helping other people, bonus points from Adam.)&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;I cannot thank Adam Yauch (MCA), Adam Horovitz (Ad-Rock), and Mike D
enough; for providing me with all the inspiration I needed, when I
needed it, to live my life; it has made all the difference. I know that
Ad-Rock and Mike D will continue to live their lives; and whether that
includes performing as &amp;quot;Beastie Boys&amp;quot; or not, does not matter to me; I
will still be watching, waiting to be inspired again. And to Adam Yauch
who has rapped, joked, snowboarded, and philanthropized his way through
all our lives: thank you for the inspiration; I use it every day, and
I'll never forget it was &lt;em&gt;you&lt;/em&gt; and your closest two brothers Ad-Rock and
Mike D who gave it to me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="system-messages section"&gt;
&lt;h2&gt;Docutils System Messages&lt;/h2&gt;
&lt;div class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/adam-yauch-has-passed.rst&lt;/tt&gt;, line 59); &lt;em&gt;&lt;a href="#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image0|&amp;quot;.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>New Year&amp;#039;s Python Meme 2012</title><link href="http://blog.aclark.net/new-year039s-python-meme-2012.html" rel="alternate"></link><updated>2011-12-21T13:11:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2011-12-21:new-year039s-python-meme-2012.html</id><summary type="html">&lt;p&gt;&lt;em&gt;My response to
`http://tarekziade.wordpress.com/2011/12/20/new-years-python-meme-2/`_
(with gratuitous links to `pythonpackages.com`_, my new project,
sprinkled throughout).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It was fun &lt;a class="reference external" href="http://blog.aclark.net/2009/12/31/new-years-python-meme/"&gt;answering in 2009&lt;/a&gt;, so I thought I'd play again.&lt;/p&gt;
&lt;div class="section" id="whats-the-coolest-python-application-framework-or-library-you-have-discovered-in-2011"&gt;
&lt;h2&gt;What’s the coolest Python application, framework or library you have discovered in 2011?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.pylonsproject.org/"&gt;Pyramid&lt;/a&gt;. In early 2011 I released &lt;a class="reference external" href="http://pythonpackages.com/info/vanity"&gt;vanity&lt;/a&gt;, which later became
&lt;a class="reference external" href="http://pythonpackages.com"&gt;pythonpackages.com&lt;/a&gt;(more or less). I used building the site as an
excuse to learn Pyramid, and it was well worth it.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What new programming technique did you learn in 2011?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I learned to &lt;strong&gt;not&lt;/strong&gt; reinvent the wheel, and to collaborate with others
on solving hard problems (which in and of itself is hard). Long story
short, I took a little bit of heat within the Plone CMS community for
creating a &amp;quot;one off&amp;quot; migration script:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonpackages.com/info/parse2plone"&gt;http://pythonpackages.com/info/parse2plone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've since learned my lesson and have been collaborating meaningfully
with &lt;a class="reference external" href="https://twitter.com/#!/djay75"&gt;Dylan Jay&lt;/a&gt;on the more widely-supported &lt;a class="reference external" href="http://pythonpackages.com/info/mr.migrator"&gt;mr.migrator&lt;/a&gt; and
friends.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What’s the name of the open source project you contributed to the most
in 2011? What did you do?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I contributed to the &lt;a class="reference external" href="http://plone.org"&gt;Plone&lt;/a&gt; project quite a bit (as I have been doing
for years now), but I also fell in love with &lt;a class="reference external" href="http://mozilla.org"&gt;Mozilla&lt;/a&gt; (and their
mission) and began working on various things, including a virtual
machine to help with the development of &lt;a class="reference external" href="http://support.mozilla.com"&gt;support.mozilla.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/aclark4life/kitsune-vagrant"&gt;https://github.com/aclark4life/kitsune-vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What was the Python blog or website you read the most in 2011?&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker news&lt;/a&gt;. I have the start-up bug.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What are the three top things you want to learn in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JavaScript, JavaScript, and JavaScript. I first heard the term 15 years
ago and have been avoiding it ever since. Time to jump in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What is the top software, application or library you wish someone
would write in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I hope someone (me) writes a &amp;quot;secret&amp;quot; feature for &lt;a class="reference external" href="http://pythonpackages.com"&gt;pythonpackages.com&lt;/a&gt;
and launches it in first quarter of 2012; and I hope folks find it
useful.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>Vagrant, Puppet and Mozilla, oh my!</title><link href="http://blog.aclark.net/vagrant-puppet-and-mozilla-oh-my.html" rel="alternate"></link><updated>2011-10-03T17:25:00Z</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2011-10-03:vagrant-puppet-and-mozilla-oh-my.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Warning: This post is only loosely Python related and not at all Plone
related, but I thought folks might enjoy hearing about Vagrant and
Puppet because these tools may help you do your Plone and Python jobs
better.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For the past couple weeks I've been working on creating a virtual
machine to bootstrap a kitsune environment. Kitsune is the Django site
that powers support.mozilla.com. I've now reached what I call the &lt;strong&gt;2nd
milestone&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="milestones"&gt;
&lt;h2&gt;Milestones&lt;/h2&gt;
&lt;p&gt;The milestones are as follows:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Get the VM running to the point where one can type &lt;strong&gt;./manage.py&lt;/strong&gt;
and receive the help output (and not a traceback). This sounds
trivial but there is actually a lot of work involved to get to this
point. Namely, figuring out how to make &lt;a class="reference external" href="http://puppetlabs.com/"&gt;Puppet&lt;/a&gt; execute each of the
required steps successfully, together. (You would expect to be able
to just define the steps in order, but those with this expectation
will be disappointed. I assume Puppet has their reasons, and they are
probably even good ones. :-))&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Get the VM running to the point where one can open
http://33.33.33.10:8000 from the host to see kitsune running. Once
step #1 is done, this is actually easier than it sounds because I'm
&amp;quot;cheating&amp;quot;. Test data has been imported and a syncdb has been run,
but I'm using supervisor to manage the runserver process (for now).&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Get the VM running like it does in production. This will involve
configuring &lt;strong&gt;Apache&lt;/strong&gt;and &lt;strong&gt;mod_wsgi&lt;/strong&gt; as well as resolving any
issues that remain with the app. I'll rely on the kitsune team to
help with this, as I'm still learning the app. This is the &amp;quot;exciting&amp;quot;
part for me because I get to learn something new. While Vagrant and
Puppet are also new to me, I consider these technologies part of my
&amp;quot;past life&amp;quot; (as a system administrator) and Django sites part of my
&amp;quot;future life&amp;quot; (as a web developer).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now about the technologies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vagrant"&gt;
&lt;h2&gt;Vagrant&lt;/h2&gt;
&lt;p&gt;I had heard of &lt;a class="reference external" href="http://vagrantup.com/"&gt;Vagrant&lt;/a&gt; before, but never tried it. I am now sorry I
waited so long because the &amp;quot;cool factor&amp;quot; is very high. It requires that
&lt;a class="reference external" href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; be installed, which I also danced around for too long
before committing (being a former Parallels user).&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;p&gt;On OS X Lion[1], installing Vagrant is simply a matter of:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ gem install vagrant
&lt;/pre&gt;
&lt;p&gt;Once you have `vagrant` installed you can do:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ vagrant init
&lt;/pre&gt;
&lt;p&gt;inside some revision-controlled directory and you have the beginnings of
a virtual machine you can share with the masses. This is how
&lt;a class="reference external" href="https://github.com/aclark4life/kitsune-vagrant"&gt;kitsune-vagrant&lt;/a&gt; was born. Hopefully this shared virtual machine will
eventually make some new developer's life much easier.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;We now arrive at a fork in the road; though Vagrant makes it easy to
follow both paths: Chef or Puppet (it supports both). I don't recall
what made me choose Puppet over Chef, but it might have been that the
&lt;a class="reference external" href="https://github.com/rhelmer/socorro-vagrant"&gt;Socorro folks were using it already&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you decide on Puppet (and assuming you do), it's pretty easy to
figure out that your next move is to create a manifest file for Puppet
to apply[2].&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="puppet"&gt;
&lt;h2&gt;Puppet&lt;/h2&gt;
&lt;p&gt;My knowledge of Puppet is currently quite limited. Specifically, I only
know how to create a manifest file. (Vagrant does the rest!) I imagine
there is much more to Puppet, especially with regard to doing actual
configuration management on production servers. But I have not explored
any of that yet.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;However, I did learn quite a bit about Puppet just from writing the
manifest. The first most important thing I learned is this: &lt;strong&gt;Puppet is
in charge&lt;/strong&gt;. It does things the way it wants to and you need to follow
its rules. The first and biggest challenge is to achieve a linear
execution of tasks.&lt;/p&gt;
&lt;p&gt;You cannot write rules in order and hope for the best. This will fail
spectacularly when something executes before something else was supposed
to. The way around this is via `require =&amp;gt;` statements.&lt;/p&gt;
&lt;p&gt;&lt;p&gt;A grep through kitsune.pp reveals:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
require =&amp;gt; Exec['git_clone'],
require =&amp;gt; Exec['db_sync'],
require =&amp;gt; Exec['packages_upgrade'],
require =&amp;gt; Exec['packages_update'],
require =&amp;gt; Package[$packages_native],
require =&amp;gt; Exec['git_clone'],
require =&amp;gt; Exec['chown_kitsune'],
require =&amp;gt; Exec['packages_compiled'],
require =&amp;gt; Exec['packages_vendor'],
require =&amp;gt; Exec['db_create'],
require =&amp;gt; Exec['db_import'],
require =&amp;gt; file['/etc/supervisor/supervisord.conf'],
require =&amp;gt; Exec['supervisor_stop'],
&lt;/pre&gt;
&lt;p&gt;This roughly translates to the following workflow logic:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ensure that `aptitude -y update; aptitude -y upgrade` have been run
before you try to install the list of packages we require.&lt;/li&gt;
&lt;li&gt;Ensure the list of packages we require is installed before we
checkout the code.&lt;/li&gt;
&lt;li&gt;Ensure the code has been checked out (and pip install / git submodule
have been run) before you try to syncdb and run the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is a bit more to it, but with that knowledge you should be able to
&lt;a class="reference external" href="https://github.com/aclark4life/kitsune-vagrant/blob/master/manifests/kitsune.pp"&gt;read and understand kitsune.pp in full&lt;/a&gt;. I learned most of the
remaining required puppeteering from this
site:&lt;a class="reference external" href="http://www.puppetcookbook.com/"&gt;http://www.puppetcookbook.com/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mozilla"&gt;
&lt;h2&gt;Mozilla&lt;/h2&gt;
&lt;p&gt;Oh my! This Mozilla work is a ton of fun[3]; I attribute this in part
due to the structure of their organization: I was invited immediately to
collaborate in IRC with the kitsune team and as a result, we all have
something to show for it[4].&lt;/p&gt;
&lt;p&gt;&lt;a href="#id3"&gt;&lt;span class="problematic" id="id4"&gt;`|image0|`_&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next I will be working on the 3rd milestone! Hope to finish by the end
of this week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;[1] This did not work on Snow Leopard, because `gem` is too old.
However if you `brew install ruby` and try again, it should work.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;[2] I didn't bother to investigate Chef, but I am curious about it.&lt;/p&gt;
&lt;p&gt;[3] And I hope this is only the beginning.&lt;/p&gt;
&lt;p&gt;[4] I hope to get a Mozilla gig but even if I don't, being able to do
this type of work is very rewarding (which is why you will often hear
people in open source say that to get paid for the type of work they do
is a dream come true :-)).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="system-messages section"&gt;
&lt;h2&gt;Docutils System Messages&lt;/h2&gt;
&lt;div class="system-message" id="id3"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;/Users/aclark/Developer/blog/content/vagrant-puppet-and-mozilla-oh-my.rst&lt;/tt&gt;, line 158); &lt;em&gt;&lt;a href="#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Unknown target name: &amp;quot;|image0|&amp;quot;.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry></feed>